# -*- coding: utf-8 -*-
"""Python Data Type: List - 20 zadań.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14qJg8Qvk0Tia1zy50-ilEpcye9pGTmx9
"""

# Zadanie 21 - Write a Python program to sum all the items in a list.
def suma_elementów(lista):
    suma = sum(lista)
    return suma

# Testuj funkcję
liczby = [1, 2, 3, 4, 5]
print("Suma wszystkich elementów na liście:", suma_elementów(liczby))

# Zadanie 22 - Write a Python program to multiply all the items in a list.
def pomnóż_elementy(lista):
    wynik = 1
    for element in lista:
        wynik *= element
    return wynik

# Testuj funkcję
liczby = [1, 2, 3, 4, 5]
print("Iloczyn wszystkich elementów na liście:", pomnóż_elementy(liczby))

# Zadanie 23 - Write a Python program to get the largest number from a list.
def znajdź_największą_liczbę(lista):
    if not lista:
        return "Lista jest pusta."
    else:
        największa_liczba = max(lista)
        return największa_liczba

# Testuj funkcję
liczby = [10, 5, 20, 8, 15]
print("Największa liczba z listy:", znajdź_największą_liczbę(liczby))

# Zadanie 24 - Write a Python program to get the smallest number from a list.
def znajdź_najmniejszą_liczbę(lista):
    if not lista:
        return "Lista jest pusta."
    else:
        najmniejsza_liczba = min(lista)
        return najmniejsza_liczba

# Testuj funkcję
liczby = [10, 5, 20, 8, 15]
print("Najmniejsza liczba z listy:", znajdź_najmniejszą_liczbę(liczby))

# Zadanie 25 - Write a Python program to remove duplicates from a list.
def usun_duplikaty(lista):
    return list(set(lista))

# Testuj funkcję
lista = [1, 2, 3, 2, 4, 5, 1]
print("Lista przed usunięciem duplikatów:", lista)
bez_duplikatow = usun_duplikaty(lista)
print("Lista po usunięciu duplikatów:", bez_duplikatow)

# Zadanie 26 - Write a Python program to check if a list is empty or not.
def czy_lista_pusta(lista):
    if not lista:
        return True
    else:
        return False

# Testuj funkcję
lista1 = []
lista2 = [1, 2, 3]

print("Czy lista1 jest pusta?", czy_lista_pusta(lista1))
print("Czy lista2 jest pusta?", czy_lista_pusta(lista2))

# Zadanie 27 - Write a Python program to clone or copy a list.
def skopiuj_listę(lista):
    return lista.copy()

# Testuj funkcję
lista = [1, 2, 3, 4, 5]
skopiowana_lista = skopiuj_listę(lista)
print("Oryginalna lista:", lista)
print("Skopiowana lista:", skopiowana_lista)

# Zadanie 28 - Write a Python program to find the list of words that are longer than n from a given list of words.
def znajdź_słowa_dłuższe_n(lista_słów, n):
    return [słowo for słowo in lista_słów if len(słowo) > n]

# Testuj funkcję
lista_słów = ['jabłko', 'banan', 'gruszka', 'śliwka', 'malina']
n = 5
print("Słowa dłuższe niż", n, ":", znajdź_słowa_dłuższe_n(lista_słów, n))

# Zadanie 29 - Write a Python function that takes two lists and returns True if they have at least one common member.
def mają_wspólny_element(lista1, lista2):
    wspólny_element = any(elem in lista1 for elem in lista2)
    return wspólny_element

# Testuj funkcję
lista1 = [1, 2, 3, 4, 5]
lista2 = [6, 7, 8, 9, 10]
lista3 = [5, 10, 15, 20]

print("Czy lista1 i lista2 mają wspólny element?", mają_wspólny_element(lista1, lista2))
print("Czy lista1 i lista3 mają wspólny element?", mają_wspólny_element(lista1, lista3))

# Zadanie 30 - Write a Python program to print a specified list after removing the 0th, 4th and 5th elements.
def usuń_elementy(lista):
    indeksy_do_usunięcia = [0, 4, 5]
    nowa_lista = [elem for i, elem in enumerate(lista) if i not in indeksy_do_usunięcia]
    return nowa_lista

# Testuj funkcję
lista = ['a', 'b', 'c', 'd', 'e', 'f', 'g']
nowa_lista = usuń_elementy(lista)
print("Oryginalna lista:", lista)
print("Lista po usunięciu elementów:", nowa_lista)

# Zadanie 31 - Write a Python program to print the numbers of a specified list after removing even numbers from it.
def usuń_parzyste(liczby):
    return [liczba for liczba in liczby if liczba % 2 != 0]

# Testuj funkcję
lista = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
nowa_lista = usuń_parzyste(lista)
print("Oryginalna lista:", lista)
print("Lista po usunięciu liczb parzystych:", nowa_lista)

# Zadanie 32 - Write a Python program to shuffle and print a specified list.
import random

def wymieszaj_i_wyświetl(lista):
    random.shuffle(lista)
    print("Lista po wymieszaniu:", lista)

# Testuj funkcję
lista = [1, 2, 3, 4, 5]
print("Oryginalna lista:", lista)
wymieszaj_i_wyświetl(lista)

# Zadanie 33 - Write a Python program to generate and print a list of the first and last 5 elements where the values are square numbers between 1 and 30 (both included).
def generuj_listę_kwadratów():
    lista_kwadratów = [i ** 2 for i in range(1, 6)] + [i ** 2 for i in range(26, 31)]
    return lista_kwadratów

# Testuj funkcję
lista = generuj_listę_kwadratów()
print("Pierwsze i ostatnie 5 kwadratów z przedziału od 1 do 30:")
print(lista[:5] + lista[-5:])

# Zadanie 34 - Write a Python program to calculate the difference between the two lists.
def różnica_między_listami(lista1, lista2):
    zbiór1 = set(lista1)
    zbiór2 = set(lista2)
    różnica = list(zbiór1 - zbiór2)
    return różnica

# Testuj funkcję
lista1 = [1, 2, 3, 4, 5]
lista2 = [3, 4, 5, 6, 7]
print("Różnica między lista1 i lista2:", różnica_między_listami(lista1, lista2))

# Zadanie 35 - Write a Python program to convert a list of characters into a string.
def lista_na_ciąg_znaków(lista):
    ciąg_znaków = ''.join(lista)
    return ciąg_znaków

# Testuj funkcję
lista_znaków = ['a', 'b', 'c', 'd', 'e']
ciąg = lista_na_ciąg_znaków(lista_znaków)
print("Lista znaków:", lista_znaków)
print("Ciąg znaków:", ciąg)

# Zadanie 36 - Write a Python program to select an item randomly from a list.
import random

def losowy_element(lista):
    return random.choice(lista)

# Testuj funkcję
lista = [1, 2, 3, 4, 5]
losowy = losowy_element(lista)
print("Losowy element z listy:", losowy)

# Zadanie 37 - Write a Python program to check whether two lists are circularly identical.
def są_cyklicznie_identyczne(lista1, lista2):
    if len(lista1) != len(lista2):
        return False
    for i in range(len(lista1)):
        if lista1 == lista2[i:] + lista2[:i]:
            return True
    return False

# Testuj funkcję
lista1 = [1, 2, 3, 4, 5]
lista2 = [3, 4, 5, 1, 2]
lista3 = [1, 2, 3, 4, 6]

print("Czy lista1 i lista2 są cyklicznie identyczne?", są_cyklicznie_identyczne(lista1, lista2))
print("Czy lista1 i lista3 są cyklicznie identyczne?", są_cyklicznie_identyczne(lista1, lista3))

# Zadanie 38 - Write a Python program to find the second smallest number in a list.
def znajdź_drugi_najmniejszy(lista):
    if len(lista) < 2:
        return "Lista ma za mało elementów"
    posortowana_lista = sorted(set(lista))
    return posortowana_lista[1]

# Testuj funkcję
lista = [10, 20, 4, 45, 99]
print("Drugi najmniejszy element w liście:", znajdź_drugi_najmniejszy(lista))

# Zadanie 39 - Write a Python program to find the second largest number in a list.
def znajdź_drugi_największy(lista):
    if len(lista) < 2:
        return "Lista ma za mało elementów"
    posortowana_lista = sorted(set(lista), reverse=True)
    return posortowana_lista[1]

# Testuj funkcję
lista = [10, 20, 4, 45, 99]
print("Drugi największy element w liście:", znajdź_drugi_największy(lista))

# Zadanie 40 - Write a Python program to get the frequency of elements in a list.
def częstość_elementów(lista):
    częstości = {}
    for element in lista:
        if element in częstości:
            częstości[element] += 1
        else:
            częstości[element] = 1
    return częstości

# Testuj funkcję
lista = [1, 2, 3, 2, 2, 4, 5, 1]
print("Częstość elementów w liście:", częstość_elementów(lista))