# -*- coding: utf-8 -*-
"""Python Data Type: Dictionary - 20 zadań.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fEWObk6Viml6SNgKpP4lTlT169yWf49V
"""

# Zadanie 41 - Write a Python script to sort (ascending and descending) a dictionary by value.
# Słownik do posortowania
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8, 'śliwka': 3, 'malina': 1}

# Sortowanie rosnąco według wartości
posortowany_rosnąco = dict(sorted(słownik.items(), key=lambda item: item[1]))

# Sortowanie malejąco według wartości
posortowany_malejąco = dict(sorted(słownik.items(), key=lambda item: item[1], reverse=True))

# Wyświetlenie posortowanych słowników
print("Posortowany rosnąco:", posortowany_rosnąco)
print("Posortowany malejąco:", posortowany_malejąco)

# Zadanie 42 - Write a Python script to add a key to a dictionary.
# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Nowy klucz i wartość do dodania
nowy_klucz = 'śliwka'
nowa_wartość = 3

# Dodanie nowego klucza do słownika
słownik[nowy_klucz] = nowa_wartość

# Wyświetlenie zaktualizowanego słownika
print("Zaktualizowany słownik:", słownik)

# Zadanie 43 - Write a Python script to check whether a given key already exists in a dictionary.
# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Klucz do sprawdzenia
klucz = 'jabłko'

# Sprawdzenie, czy klucz istnieje w słowniku
if klucz in słownik:
    print(f"Klucz '{klucz}' istnieje w słowniku.")
else:
    print(f"Klucz '{klucz}' nie istnieje w słowniku.")

# Zadanie 44 - Write a Python program to iterate over dictionaries using for loops.
# Słownik do iteracji
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Iteracja po elementach słownika
print("Klucze i wartości słownika:")
for klucz, wartość in słownik.items():
    print(f"Klucz: {klucz}, Wartość: {wartość}")

# Zadanie 45 - Write a Python script to generate and print a dictionary that contains a number (between 1 and n) in the form (x, x*x).
def generuj_słownik_kwadratów(n):
    słownik = {}
    for x in range(1, n + 1):
        słownik[x] = x * x
    return słownik

# Testuj funkcję
n = 5
print("Wygenerowany słownik:")
print(generuj_słownik_kwadratów(n))

# Zadanie 46 - Write a Python script to print a dictionary where the keys are numbers between 1 and 15 (both included) and the values are the square of the keys.
# Inicjalizacja pustego słownika
słownik = {}

# Generowanie i dodawanie par (klucz, wartość) do słownika
for x in range(1, 16):
    słownik[x] = x * x

# Wyświetlenie słownika
print("Wygenerowany słownik:")
print(słownik)

# Zadanie 47 - Write a Python script to merge two Python dictionaries.
# Pierwszy słownik
słownik1 = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Drugi słownik
słownik2 = {'pomarańcza': 3, 'śliwka': 4, 'malina': 1}

# Połączenie słowników za pomocą metody update()
słownik1.update(słownik2)

# Wyświetlenie połączonego słownika
print("Połączony słownik (metoda update()):")
print(słownik1)

# Połączenie słowników za pomocą operatora **
połączony_słownik = {**słownik1, **słownik2}

# Wyświetlenie połączonego słownika
print("\nPołączony słownik (operator **):")
print(połączony_słownik)

# Zadanie 48 - Write a Python program to iterate over dictionaries using for loops.
# Słownik do iteracji
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Iteracja po elementach słownika
print("Klucze i wartości słownika:")
for klucz in słownik:
    wartość = słownik[klucz]
    print(f"Klucz: {klucz}, Wartość: {wartość}")

# Zadanie 49 - Write a Python program to sum all the items in a dictionary.
# Słownik do zsumowania
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Zmienna do przechowywania sumy
suma = 0

# Iteracja po wartościach słownika i sumowanie ich
for wartość in słownik.values():
    suma += wartość

# Wyświetlenie sumy
print("Suma wszystkich wartości w słowniku:", suma)

# Zadanie 50 - Write a Python program to multiply all the items in a dictionary.
# Słownik do pomnożenia
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Zmienna do przechowywania wyniku mnożenia
iloczyn = 1

# Iteracja po wartościach słownika i mnożenie ich
for wartość in słownik.values():
    iloczyn *= wartość

# Wyświetlenie wyniku mnożenia
print("Iloczyn wszystkich wartości w słowniku:", iloczyn)

# Zadanie 51 - Write a Python program to remove a key from a dictionary.
# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8}

# Klucz do usunięcia
klucz_do_usunięcia = 'banan'

# Usunięcie klucza z słownika
if klucz_do_usunięcia in słownik:
    del słownik[klucz_do_usunięcia]
    print(f"Usunięto klucz '{klucz_do_usunięcia}' ze słownika.")
else:
    print(f"Klucz '{klucz_do_usunięcia}' nie istnieje w słowniku.")

# Wyświetlenie zaktualizowanego słownika
print("Zaktualizowany słownik:", słownik)

# Zadanie 52 - Write a Python program to sort a given dictionary by key.
# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8, 'śliwka': 3, 'malina': 1}

# Sortowanie słownika według kluczy
posortowany_słownik = dict(sorted(słownik.items()))

# Wyświetlenie posortowanego słownika
print("Posortowany słownik według kluczy:")
for klucz, wartość in posortowany_słownik.items():
    print(f"Klucz: {klucz}, Wartość: {wartość}")

# Zadanie 53 - Write a Python program to get the maximum and minimum values of a dictionary.
# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8, 'śliwka': 3, 'malina': 1}

# Maksymalna wartość
maks_wartość = max(słownik.values())

# Minimalna wartość
min_wartość = min(słownik.values())

# Wyświetlenie maksymalnej i minimalnej wartości
print("Maksymalna wartość w słowniku:", maks_wartość)
print("Minimalna wartość w słowniku:", min_wartość)

# Zadanie 54 - Write a Python program to check if a dictionary is empty or not.
# Pusty słownik
pusty_słownik = {}

# Sprawdzenie czy słownik jest pusty
if not pusty_słownik:
    print("Słownik jest pusty.")
else:
    print("Słownik nie jest pusty.")

# Niepusty słownik
niepusty_słownik = {'jabłko': 5, 'banan': 2}

# Sprawdzenie czy słownik jest pusty
if not niepusty_słownik:
    print("Słownik jest pusty.")
else:
    print("Słownik nie jest pusty.")

# Zadanie 55 - Write a Python program to find the highest 3 values of corresponding keys in a dictionary.
# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8, 'śliwka': 3, 'malina': 1}

# Sortowanie słownika według wartości w kolejności malejącej
posortowany_słownik = sorted(słownik.items(), key=lambda x: x[1], reverse=True)

# Wyświetlenie trzech najwyższych wartości
print("Trzy najwyższe wartości:")
for klucz, wartość in posortowany_słownik[:3]:
    print(f"Klucz: {klucz}, Wartość: {wartość}")

# Zadanie 56 - Write a Python program to print a dictionary in table format.
from tabulate import tabulate

# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8, 'śliwka': 3, 'malina': 1}

# Przekształcenie słownika na listę krotek
lista = [(klucz, wartość) for klucz, wartość in słownik.items()]

# Wydrukowanie słownika w formie tabeli
print(tabulate(lista, headers=["Klucz", "Wartość"], tablefmt="grid"))

# Zadanie 57 - Write a Python program to convert a list into a nested dictionary of keys.
def lista_do_zagnieżdżonego_słownika(lista, wartość):
    """
    Funkcja konwertująca listę kluczy na zagnieżdżony słownik o podanej wartości.
    """
    # Utwórz pusty słownik, który będzie wynikiem
    wynik = {}

    # Dla każdego klucza w liście
    for klucz in lista:
        # Ustaw wynik jako zagnieżdżony słownik
        wynik = {klucz: wynik}

    # Ustaw wartość dla ostatniego klucza
    ostatni_klucz = lista[-1]
    wynik[ostatni_klucz] = wartość

    return wynik

# Lista kluczy
lista_kluczy = ['a', 'b', 'c', 'd']

# Wartość końcowa
wartość = 10

# Konwersja listy na zagnieżdżony słownik
zagnieżdżony_słownik = lista_do_zagnieżdżonego_słownika(lista_kluczy, wartość)

# Wyświetlenie zagnieżdżonego słownika
print("Zagnieżdżony słownik:")
print(zagnieżdżony_słownik)

# Zadanie 58 - Write a Python program to print a dictionary line by line.
# Istniejący słownik
słownik = {'jabłko': 5, 'banan': 2, 'gruszka': 8, 'śliwka': 3, 'malina': 1}

# Iteracja po elementach słownika i wydrukowanie ich linia po linii
print("Słownik wydrukowany linia po linii:")
for klucz, wartość in słownik.items():
    print(f"Klucz: {klucz}, Wartość: {wartość}")

# Zadanie 59 - Write a Python program to count the number of items in a dictionary value that is a list.
# Istniejący słownik
słownik = {'a': [1, 2, 3], 'b': 'tekst', 'c': [4, 5], 'd': 10, 'e': [6, 7, 8, 9]}

# Licznik elementów będących listami
licznik = 0

# Iteracja po elementach słownika i zliczanie elementów będących listami
for wartość in słownik.values():
    if isinstance(wartość, list):
        licznik += 1

# Wyświetlenie wyniku
print("Liczba elementów będących listami:", licznik)

# Zadanie 60 - Write a Python program to replace dictionary values with their sums.
# Istniejący słownik
słownik = {'a': 5, 'b': 2, 'c': 8, 'd': 3, 'e': 1}

# Zsumowanie wartości słownika
suma_wartości = sum(słownik.values())

# Aktualizacja wartości słownika na ich sumę
for klucz in słownik:
    słownik[klucz] = suma_wartości

# Wyświetlenie zaktualizowanego słownika
print("Zaktualizowany słownik:")
print(słownik)